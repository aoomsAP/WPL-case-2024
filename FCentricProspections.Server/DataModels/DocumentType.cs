// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace FCentricProspections.Server.DataModels;

public partial class DocumentType
{
    public long Id { get; set; }

    public string Name { get; set; }

    public long UserCreatedId { get; set; }

    public DateTime DateCreated { get; set; }

    public byte[] Timestamp { get; set; }

    public string SequenceName { get; set; }

    public string DocumentPrefix { get; set; }

    public int Order { get; set; }

    public int Confirmation { get; set; }

    public int ReOrder { get; set; }

    public int DeliveryNote { get; set; }

    public int Invoice { get; set; }

    public int CreditNote { get; set; }

    public int Consignment { get; set; }

    public int StockOrder { get; set; }

    public int WebOrder { get; set; }

    public int OrderAtSupplier { get; set; }

    public int StockDeliveryNote { get; set; }

    public int StockAdjustments { get; set; }

    public int UndefinedStock { get; set; }

    public int BackOrder { get; set; }

    public int Cancelled { get; set; }

    public int Return { get; set; }

    public int Manco { get; set; }

    public int Swap { get; set; }

    public int Stock { get; set; }

    public bool Online { get; set; }

    public string IconGeometry { get; set; }

    public bool ShowTotalDetailsOnDocument { get; set; }

    public int BulkStock { get; set; }

    public bool ShowTransportCostOnDocument { get; set; }

    public int BulkStockDelivery { get; set; }

    public int PackingList { get; set; }

    public int OccasionalStock { get; set; }

    public int BlockedDelivery { get; set; }

    public int AvailableForReturn { get; set; }

    public int BulkOrder { get; set; }

    public int BulkConfirmation { get; set; }

    public int BulkDifference { get; set; }

    public bool BoxNrVisible { get; set; }

    public bool DeliveryWindowVisible { get; set; }

    public bool DiscountVisible { get; set; }

    public bool TotalRetailVisible { get; set; }

    public int BulkPackingList { get; set; }

    public int BulkIncomingDelivery { get; set; }

    public int BulkIncomingDifference { get; set; }

    public bool ShowReferenceOnDocument { get; set; }

    public bool ShowPicturesOnDocument { get; set; }

    public int PosInvoice { get; set; }

    public int PosCreditNote { get; set; }

    public int Shipment { get; set; }

    public int Pos { get; set; }

    public int Reception { get; set; }

    public int Transport { get; set; }

    public int PrStock { get; set; }

    public bool AllowNegativeQuantities { get; set; }

    public bool IsPress { get; set; }

    public int SampleLoan { get; set; }

    public int SampleReturn { get; set; }

    public bool ShowPublicationOnScreen { get; set; }

    public bool TotalPurchaseVisible { get; set; }

    public bool TotalListVisible { get; set; }

    public bool SendToWps { get; set; }

    public bool IsPos { get; set; }

    public int HeaderEmptyLines { get; set; }

    public int FifoIn { get; set; }

    public int FifoOut { get; set; }

    public bool IsSubstraction { get; set; }

    public int DebitNote { get; set; }

    public string NameNl { get; set; }

    public string NameEn { get; set; }

    public string NameFr { get; set; }

    public int DebitCreditNote { get; set; }

    public int IncomingOccassional { get; set; }

    public bool IsHidden { get; set; }

    public virtual ICollection<DocumentImportConfiguration> DocumentImportConfigurations { get; set; } = new List<DocumentImportConfiguration>();

    public virtual ICollection<DocumentImportMeta> DocumentImportMeta { get; set; } = new List<DocumentImportMeta>();

    public virtual ICollection<DocumentTransfer> DocumentTransferBlockedDocumentTypes { get; set; } = new List<DocumentTransfer>();

    public virtual ICollection<DocumentTransfer> DocumentTransferCanceledDocumentTypes { get; set; } = new List<DocumentTransfer>();

    public virtual ICollection<DocumentTransfer> DocumentTransferSourceDocumentTypes { get; set; } = new List<DocumentTransfer>();

    public virtual ICollection<DocumentTransfer> DocumentTransferTargetDocumentTypes { get; set; } = new List<DocumentTransfer>();

    public virtual ICollection<Document> Documents { get; set; } = new List<Document>();

    public virtual ICollection<ManualDocumentTransfer> ManualDocumentTransferSourceDocumentTypes { get; set; } = new List<ManualDocumentTransfer>();

    public virtual ICollection<ManualDocumentTransfer> ManualDocumentTransferTargetDocumentTypes { get; set; } = new List<ManualDocumentTransfer>();

    public virtual User UserCreated { get; set; }
}